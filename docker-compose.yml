version: '3.5'

networks:
  theater-management-network:
    driver: bridge

services:
  postgres_exchange:
    container_name: postgres_container_exchange
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata_exchange
    ports:
      - "5050:5432"
    networks:
      - theater-management-network
    restart: unless-stopped

  postgres_performance:
    container_name: performance_postgres_container
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata_performance
    ports:
      - "5051:5432"
    networks:
      - theater-management-network
    restart: unless-stopped

  postgres_userservice:
    container_name: userservice_postgres_container
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata_userservice
    ports:
      - "6051:5432"
    networks:
      - theater-management-network
    restart: unless-stopped

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    networks:
      - theater-management-network
    restart: unless-stopped

  workshiftservice:
    container_name: workshiftservice
    build: ./workshiftservice
    ports:
      - "8092:8088"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres
      - discovery-server
    networks:
      - theater-management-network
    restart: unless-stopped

  discovery-server:
    build: ./discoveryserver
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - theater-management-network
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: keycloak
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - theater-management-network
#
  performanceservice:
    container_name: performanceservice
    build: ./performanceservice
    ports:
      - "8093:8880"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres_performance:5432/postgres
    depends_on:
      - postgres_performance
      - discovery-server
    networks:
      - theater-management-network

  userservice:
    container_name: userservice
    build: ./userservice
    ports:
      - "8095:8089"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres_userservice:5432/postgres
    depends_on:
      - postgres_userservice
      - discovery-server
      - keycloak
    networks:
      - theater-management-network

  exchangeservice:
    container_name: exchangeservice
    build: ./exchangeservice
    ports:
      - "8097:8181"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres_exchange:5432/postgres
    depends_on:
      - postgres_exchange
      - discovery-server
    networks:
      - theater-management-network

  api-gateway:
    container_name: api-gateway
    build: ./api-gateway
    ports:
      - "8098:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
    depends_on:
      - discovery-server
      - keycloak
    networks:
      - theater-management-network


  keycloak:
    image: quay.io/keycloak/keycloak:24.0.4
    command: ["start-dev", "--import-realm", "--features=scripts" ]
    volumes:
      - ./custom-protocol-mapper:/opt/keycloak/providers
      - ./keycloak/realms/:/opt/keycloak/data/import/

    environment:
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://mysql:3306/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_FEATURES: scripts,token-exchange
      KEYCLOAK_FEATURES: scripts,token-exchange
    ports:
      - 8069:8080
    depends_on:
      - mysql
    networks:
      - theater-management-network

volumes:
  mysql-data:
  postgres_data:
